apply plugin: 'com.android.library'

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    compile 'com.android.support:support-v4:23.0.0'
    compile 'com.android.support:appcompat-v7:23.0.0'
   // compile(name: 'zxing-1.8.4', ext: 'aar')
    compile 'com.facebook.react:react-native:+'
    compile(name: 'barcodescanner-core-1.8.4', ext: 'aar')
//    compile files('libs/NELivePlayer-1.3.0.jar')
    compile files('libs/NELivePlayer.jar')
}

android {
    compileSdkVersion 23
    buildToolsVersion '26.0.2'
    defaultConfig {
        targetSdkVersion 22
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    repositories {  //本地aar方式
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}
